@use "./mixins" as mixins;
@use "./variables" as var;
@forward "./mixins";
@forward "./variables";

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ol,
ul {
  list-style-type: none;
}

button:hover {
  cursor: pointer;
}

button,
input {
  border: none;
  background-color: transparent;
  color: inherit;
  font-family: inherit;
}

textarea,
input {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

image {
  max-width: 100%;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}

:root {
  font-family: var.$ff-body;
  font-weight: var.$fw-regular;
  line-height: var.$lh-body-m;
  color: var.$on-surface-body;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scrollbar-width: 0.5rem;
}

.font-body-xs {
  font-size: var.$fs-body-xs;
  line-height: var.$lh-body-xs;
}
.font-body-sm {
  font-size: var.$fs-body-sm;
  line-height: var.$lh-body-sm;
}
.font-body-m {
  font-size: var.$fs-body-m;
  line-height: var.$lh-body-m;
}
.font-body-lg {
  font-size: var.$fs-body-lg;
  line-height: var.$lh-body-lg;
}
.font-body-xl {
  font-size: var.$fs-body-xl;
  line-height: var.$lh-body-xl;
}

.logo {
  font-size: var.$fs-body-xl;
  color: var.$on-surface-heading;
  font-weight: var.$fw-bold;
  font-family: Arial, Helvetica, sans-serif;
  padding: 1rem;
  border-bottom: 1px solid var.$border-lowest;
}

h1,
h2,
h3,
h4 {
  font-family: var.$ff-headings;
  font-weight: var.$fw-bold;
  color: var.$on-surface-heading;
}

h1 {
  font-size: var.$fs-h1;
  line-height: var.$lh-h1;
}
h2 {
  font-size: var.$fs-h2;
  line-height: var.$lh-h2;
}
h3 {
  font-size: var.$fs-h3;
  line-height: var.$lh-h3;
}
h4 {
  font-size: var.$fs-h4;
  line-height: var.$lh-h4;
}

.font-regular {
  font-weight: var.$fw-regular;
}
.font-medium {
  font-weight: var.$fw-medium;
}
.font-bold {
  font-weight: var.$fw-bold;
}
.font-semibold {
  font-weight: var.$fw-semibold;
}

#root {
  min-height: 100svh;
  height: 100svh;
  max-height: 100svh;
}

body {
  overflow: hidden;
}

// There is a bug that in chrome mobile that doesn't show the correct height on page load
// Tried fixing it, but found no solution.

main {
  min-height: 100svh;
  height: 100svh;
  max-height: 100svh;
  position: relative;
  overflow: hidden;
}

// UTLILITY CLASSES

.flex-center {
  display: flex;
  align-items: center;
}

.grid-center {
  display: grid;
  place-content: center;
}

.bg-surface-container-low {
  background-color: var.$surface-container-low;
}

.bg-surface {
  background-color: var.$surface;
}

.bg-inverse-surface-high {
  background-color: var.$inverse-surface-high;
}

.button--hovered {
  transition: filter var.$an-sp-fast ease-out;
  &:hover {
    filter: brightness(85%);
  }
}

.inverse-button--hovered {
  transition: background-color var.$an-sp-fast ease-out;
  &:hover {
    background-color: color-mix(in srgb, var.$inverse-surface 85%, white 15%);
  }
}

.button--focused {
  transition: filter var.$an-sp-fast ease-out;
  &:focus {
    filter: brightness(85%);
  }
}

.fade-out--bottom {
  background: linear-gradient(
    to bottom,
    rgba(var.$surface, 0) 0%,
    rgba(var.$surface, 1) 100%
  );
}

.off-screen {
  position: fixed;
  transform: translateX(-1000000%);
}

@supports selector(::-webkit-scrollbar) {
  ::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
  }
  ::-webkit-scrollbar-track {
    background-color: var.$surface-container-low;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var.$surface-container;
    border-radius: var.$br-400;
  }
}
