@use "./mixins" as mixins;
@use "./variables" as var;
@forward "./mixins";
@forward "./variables";

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ol,
ul {
  list-style-type: none;
}

button,
input {
  border: none;
  background-color: transparent;
  color: inherit;
}

textarea,
input {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

image {
  max-width: 100%;
}

:root {
  font-family: var.$ff-body;
  font-weight: var.$fw-regular;
  color: var.$on-surface-body;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.font-body-xs {
  font-size: var.$fs-body-xs;
}
.font-body-sm {
  font-size: var.$fs-body-sm;
}
.font-body-m {
  font-size: var.$fs-body-m;
}
.font-body-lg {
  font-size: var.$fs-body-lg;
}
.font-body-xl {
  font-size: var.$fs-body-xl;
}

h1,
h2,
h3,
h4 {
  font-family: var.$ff-headings;
  font-weight: var.$fw-bold;
  color: var.$on-surface-heading;
}

h1 {
  font-size: var.$fs-h1;
}
h2 {
  font-size: var.$fs-h2;
}
h3 {
  font-size: var.$fs-h3;
}
h4 {
  font-size: var.$fs-h4;
}

#root {
  min-height: 100svh;
  height: 100svh;
  max-height: 100svh;
}

body {
  overflow-y: hidden;
}

main {
  min-height: 100svh;
  height: 100svh;
  max-height: 100svh;
}

.bg-surface-container-low {
  background-color: var.$surface-container-low;
}

.button--hovered {
  transition: filter 250ms ease-out;
  &:hover {
    filter: brightness(85%);
  }
}

.fade-out {
  background: linear-gradient(
    to bottom,
    rgba(var.$surface, 0) 0%,
    rgba(var.$surface, 1) 100%
  );
}
