@use "../../../assets/styles/base" as base;

.expression-panel {
  display: grid;
  grid-template-rows: 3.5rem 1fr;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 17.625rem;
  min-width: 17.625rem;
  max-width: calc(100% - 17.625rem);
  background-color: base.$surface;
  z-index: 10;

  &__resizer {
    position: absolute;
    z-index: 9;
    top: 0;
    bottom: 0;
    left: 100%;
    width: 1rem;
    &:hover {
      cursor: e-resize;
    }

    &::before {
      content: "";
      pointer-events: none;
      position: absolute;
      z-index: -1;
      top: 0;
      left: -50%;
      bottom: 0;
      width: 50%;
      box-shadow: 1px 0px 2px base.$shadow-level2,
        4px 0px 5px base.$shadow-level1;
    }
  }
}

.expression-panel-top-bar {
  @include base.flexBetween();
  background-color: base.$surface-container-low;
  padding-inline: 0.5rem;
  gap: 1rem;
  border-bottom: 1px solid base.$border-lowest;

  &__right {
    display: flex;
  }
  &__left {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    flex: 1;

    h1 {
      @extend .font-body-lg;
      font-weight: base.$fw-medium;
    }
  }
}

.new-graph-item {
  @extend .font-body-sm;
  text-transform: capitalize;
  background-color: base.$surface;

  &:hover {
    @extend .button--hovered;
  }

  button {
    display: flex;
    align-items: center;
    height: 2.5rem;
    gap: 0.25rem;
    padding: 0.5rem;
  }
}

.expression-list-container {
  overflow-y: auto;
  padding-bottom: 2rem;

  .expression-list__li {
    display: flex;
    align-items: center;
    position: relative;
    min-height: 3.5rem;
    border-bottom: 1px solid base.$border-lowest;

    &.expression-list__li--focused {
      border: 0;
      outline: 1px solid base.$primary;

      .dynamic-island {
        background-color: base.$primary;
        color: base.$on-primary;
      }
    }
  }

  .expression-list__li--faded {
    min-height: 3.5rem;
    display: flex;
    position: relative;

    &:hover {
      cursor: pointer;
    }

    &::before {
      @extend .fade-out--bottom;
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0;
      height: 50%;
    }

    .dynamic-island {
      width: 2.5rem;
      align-self: stretch;
      padding: 0.125rem;
      background-color: base.$surface-container-low;

      &__index {
        font-size: base.$fs-body-xs;
        margin-bottom: 0.125rem;
      }
    }
  }
}

.expression-list__li.expression-list__li--dragging {
  box-shadow: base.$box-shadow;
  outline: 1px solid base.$primary;
  border: 0;

  .dynamic-island {
    background-color: base.$primary;
    color: base.$on-primary;
  }
}

.dynamic-island {
  transition: background-color 150ms ease-out, color 150ms ease-out;
  min-width: 2.5rem;
  align-self: stretch;
  padding: 0.125rem;
  background-color: base.$surface-container-low;

  &:hover {
    cursor: move;
  }

  &__index {
    @extend .font-body-xs;
  }
  &__type {
    position: relative;
    cursor: pointer;
    @include base.gridCenter();
  }
  &__error {
    @extend .font-body-sm;
    position: absolute;
    top: calc(100% + 0.25rem);
    width: max-content;
    max-width: 12rem;
    background-color: base.$inverse-surface;
    color: base.$inverse-on-surface-heading;
    padding: 0.375rem 0.5rem;
    border-radius: base.$br-200;
    z-index: 30;
    text-align: center;
    cursor: text;

    @include base.beforeAbsolute("&") {
      @include base.cssTriangle(0.25rem, 0.25rem, base.$inverse-surface);
      top: 0;
      transform: translateY(-100%);
      left: 0.875rem;
    }
  }
  &-type-function {
    @include base.inlineGridCenter();
    border-radius: base.$br-round;
    overflow: hidden;
  }
}

.expression-settings {
  position: absolute;
  width: 14rem;
  background-color: base.$surface;
  border-radius: base.$br-200;
  z-index: 30;
  top: 0;
  left: calc(100% + 0.75rem);
  box-shadow: base.$box-shadow;
  border: 1px solid base.$border-low;

  display: flex;
  flex-direction: column;
  cursor: default;

  &-triangle {
    position: absolute;
    z-index: 31;
    bottom: 0.625rem;
    right: -1rem;
    top: auto;
    transform: rotate(-90deg);
    color: base.$surface;
    stroke: base.$border-low;
    stroke-width: 1px;

    &-mask {
      z-index: 32;
      bottom: 0.625rem;
      right: -1rem;
      position: absolute;
      background-color: base.$surface;
      width: 3px;
      height: 14px;
    }
  }

  &-header {
    color: base.$on-secondary-container;
    font-weight: base.$fw-medium;
    padding: 0.5rem;
    @include base.flexBetween();
  }

  &-body {
    color: base.$on-surface-body-low;
    display: flex;
    padding: 0 0.5rem;
    gap: 0.5rem;

    &-left {
      display: grid;
      gap: 0.5rem;
      width: 30%;
    }
    &-right {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      width: 70%;

      & > button:nth-of-type(3n + 1) {
        border-top-left-radius: base.$br-100;
        border-bottom-left-radius: base.$br-100;
      }
      & > button:nth-of-type(3n + 3) {
        border-top-right-radius: base.$br-100;
        border-bottom-right-radius: base.$br-100;
      }
      & > button {
        border-radius: 0;
      }
      & > button:not(.js-selected-chip) {
        background-color: base.$surface;

        &:hover {
          @extend .button--hovered;
        }
      }
      & > button:not(:last-of-type, .js-selected-chip) {
        border-right: 0;
      }
      & > button.js-selected-chip + * {
        border-left: 0;
      }
    }
  }

  &-footer {
    display: flex;
    gap: 0.25rem;
    padding: 0 0.5rem 0.5rem;

    & > button {
      flex: 1;
      border: none;

      &.js-selected-chip div {
        @include base.checkmark(base.$inverse-on-surface-heading);
      }
    }
  }
}

.function-input-container {
  color: base.$on-surface-body-high;
  font-weight: base.$fw-medium;
  padding-block: 0.5rem;
  margin-right: 3.5rem;
  padding-left: 1rem;
  overflow: hidden;

  .function-input {
    @extend .font-body-xl;
    width: 100%;
    outline: none;
    resize: none;
    border: none;
    background-color: transparent;
    height: calc(1lh + 0.25rem);
    overflow: hidden;
    display: block;
  }

  & ~ .function-input-value-container {
    @include base.flexCenter();
    @extend .font-body-m;
    padding-right: 0.75rem;
    margin-bottom: 0.5rem;
    place-self: flex-end;
    gap: 0.25rem;

    & > .function-input-value {
      padding: 0.25rem 0.5rem;
      color: base.$on-surface-body-high;
      background-color: base.$surface-container-low;
      border-radius: base.$br-100;
    }
  }
}

@media screen and (max-width: 500px) {
  .expression-panel {
    top: 50%;
    left: 0;
    bottom: 0;
    width: 100%;
    max-width: 100%;

    &__resizer {
      inset: 0;
      top: -1rem;
      height: 1rem;
      width: auto;
      &:hover {
        cursor: default;
      }
      &::before {
        top: 100%;
        left: 0;
        right: 0;
        height: 50%;
        bottom: auto;
        width: auto;
        box-shadow: 0px -1px 2px base.$shadow-level2,
          0px -4px 5px base.$shadow-level1;
      }
    }
  }
}
